<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:extender="clr-namespace:MaterialDesignThemes.Wpf.AddOns"
                    xmlns:converters="clr-namespace:EMA.ExtendedWPFConverters;assembly=ExtendedWPFConverters"
                    xmlns:extenderConverter="clr-namespace:MaterialDesignThemes.Wpf.AddOns.Converters">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf.AddOns;component/Themes/MaterialDesignTheme.ToggleButton.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <wpf:BrushRoundConverter x:Key="BrushRoundConverter" />
    <converters:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter"  />
    <extenderConverter:BorderClipConverter x:Key="InnerBorderClipConverter" />

    <Style x:Key="MaterialDesignRaisedSplitToggleButton" TargetType="{x:Type extender:SplitToggleButton}" BasedOn="{StaticResource MaterialDesignRaisedRectangularToggleButton}">
        <Setter Property="TextElement.FontWeight" Value="Medium"/>
        <Setter Property="TextElement.FontSize" Value="14"/>
        <Setter Property="Padding" Value="13, 2"/>
        <Setter Property="TrailingIconKind" Value="ChevronDown" />
        <Setter Property="TrailingIconMargin" Value="-8,0,6,0" />
        <Setter Property="TrailingIconSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type extender:SplitToggleButton}">
                    <Grid>
                        <Border x:Name="border"
                                CornerRadius="2"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ShadowAssist.ShadowDepth), Converter={x:Static wpf:ShadowConverter.Instance}}" />
                        
                        <wpf:Ripple x:Name="contentControl"
                                    Focusable="False"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentControl  x:Name="MainPart"
                                                     Content="{TemplateBinding Content}" 
                                                     ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                     Margin="{TemplateBinding Padding}"
                                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Focusable="False"
                                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                
                                <Border Grid.Column="1" Margin="0" Padding="2,0" 
                                        Visibility="{Binding TrailingIconKind, Converter={StaticResource NotNullToVisibilityConverter}}">
                                    <wpf:PackIcon Kind="{TemplateBinding TrailingIconKind}" 
                                                  Width="{TemplateBinding TrailingIconSize}"
                                                  Height="{TemplateBinding TrailingIconSize}"
                                                  Margin="{TemplateBinding TrailingIconMargin}"
                                                  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                                
                                <wpf:PopupEx Grid.Column="0" x:Name="PART_Popup" 
                                             TextElement.Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             TextElement.FontSize="{Binding (TextElement.FontSize), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             TextElement.FontWeight="{Binding (TextElement.FontWeight), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             StaysOpen="False"
                                             HorizontalOffset="10"
                                             VerticalOffset="5"
                                             PlacementTarget="{Binding ElementName=border}"
                                             Placement="Bottom"
                                             PopupAnimation="Fade"
                                             AllowsTransparency="True">
                                    <wpf:Card Content="{TemplateBinding PopupContent}" 
                                              ContentTemplate="{TemplateBinding PopupContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding PopupContentTemplateSelector}"
                                              Margin="4"
                                              wpf:ShadowAssist.ShadowDepth="Depth2"
                                              RenderOptions.ClearTypeHint="Enabled" />
                                </wpf:PopupEx>
                            </Grid>
                        </wpf:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                            <Setter TargetName="MainPart" Property="Opacity" Value="0.5"/>
                            <Setter Property="wpf:RippleAssist.IsDisabled" Value="True" />
                            <Setter TargetName="PART_Popup" Property="wpf:RippleAssist.IsDisabled" Value="{Binding (wpf:RippleAssist.IsDisabled), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="wpf:ToggleButtonAssist.HasOnContent" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="contentControl" Property="Content" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ToggleButtonAssist.OnContent)}" />
                            <Setter TargetName="contentControl" Property="ContentTemplate" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ToggleButtonAssist.OnContentTemplate)}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialDesignRaisedLightSplitToggleButton" TargetType="{x:Type extender:SplitToggleButton}" BasedOn="{StaticResource MaterialDesignRaisedSplitToggleButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
    </Style>

    <Style x:Key="MaterialDesignRaisedDarkSplitToggleButton" TargetType="{x:Type extender:SplitToggleButton}" BasedOn="{StaticResource MaterialDesignRaisedSplitToggleButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
    </Style>

    <Style x:Key="MaterialDesignRaisedAccentSplitToggleButton" TargetType="{x:Type extender:SplitToggleButton}" BasedOn="{StaticResource MaterialDesignRaisedSplitToggleButton}">
        <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryAccentBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentForegroundBrush}"/>
    </Style>
    
    <Style x:Key="MaterialDesignFlatSplitToggleButton" TargetType="{x:Type extender:SplitToggleButton}" BasedOn="{StaticResource MaterialDesignFlatRectangularToggleButton}">
        <Setter Property="TextElement.FontWeight" Value="Medium"/>
        <Setter Property="TextElement.FontSize" Value="14"/>
        <Setter Property="Padding" Value="13, 2"/>
        <Setter Property="TrailingIconKind" Value="ChevronDown" />
        <Setter Property="TrailingIconMargin" Value="-8,0,6,0" />
        <Setter Property="TrailingIconSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type extender:SplitToggleButton}">
                    <Grid>
                        <Border x:Name="border"
                                CornerRadius="2"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            
                        <wpf:Ripple VerticalContentAlignment="Stretch" 
                                    HorizontalContentAlignment="Stretch">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                
                                <ContentControl x:Name="MainPart"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                Focusable="False" IsTabStop="False"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Margin="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                
                                <Border Grid.Column="1" Margin="0" Padding="2,0" 
                                        Visibility="{Binding TrailingIconKind, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NotNullToVisibilityConverter}}">
                                    <wpf:PackIcon Kind="{TemplateBinding TrailingIconKind}" 
                                                  Width="{TemplateBinding TrailingIconSize}"
                                                  Height="{TemplateBinding TrailingIconSize}"
                                                  Margin="{TemplateBinding TrailingIconMargin}"
                                                  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>

                                <wpf:PopupEx Grid.Column="0" x:Name="PART_Popup" 
                                             TextElement.Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             TextElement.FontSize="{Binding (TextElement.FontSize), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             TextElement.FontWeight="{Binding (TextElement.FontWeight), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             StaysOpen="False"
                                             HorizontalOffset="10"
                                             VerticalOffset="5"
                                             PlacementTarget="{Binding ElementName=border}"
                                             Placement="Bottom"
                                             PopupAnimation="Fade"
                                             AllowsTransparency="True">
                                    <wpf:Card Content="{TemplateBinding PopupContent}" 
                                              ContentTemplate="{TemplateBinding PopupContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding PopupContentTemplateSelector}"
                                              Margin="4"
                                              wpf:ShadowAssist.ShadowDepth="Depth2"
                                              RenderOptions.ClearTypeHint="Enabled" />
                                </wpf:PopupEx>
                            </Grid>
                        </wpf:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" 
                                    Value="{Binding Background,
                                                    RelativeSource={RelativeSource Mode=TemplatedParent},
                                                    Converter={StaticResource BrushOpacityConverter},
                                                    ConverterParameter=0.16}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" 
                                    Value="{Binding Background,
                                                    RelativeSource={RelativeSource Mode=TemplatedParent},
                                                    Converter={StaticResource BrushOpacityConverter},
                                                    ConverterParameter=0.36}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" 
                                    Value="{Binding Background,
                                                    RelativeSource={RelativeSource Mode=TemplatedParent},
                                                    Converter={StaticResource BrushOpacityConverter},
                                                    ConverterParameter=0.28}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="wpf:ToggleButtonAssist.HasOnContent" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainPart" Property="Content" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ToggleButtonAssist.OnContent)}" />
                            <Setter TargetName="MainPart" Property="ContentTemplate" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ToggleButtonAssist.OnContentTemplate)}" />
                        </MultiTrigger>
                        <Trigger Property="IsOpen" SourceName="PART_Popup" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                            <Setter TargetName="MainPart" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="MainPart" Property="Opacity" Value="0.7"/>
                            <Setter Property="wpf:RippleAssist.IsDisabled" Value="True" />
                            <Setter TargetName="PART_Popup" Property="wpf:RippleAssist.IsDisabled" Value="{Binding (wpf:RippleAssist.IsDisabled), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <EventTrigger SourceName="PART_Popup" RoutedEvent="Unloaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="MainPart" 
                                                                    Storyboard.TargetProperty="IsEnabled" Duration="0:0:6" FillBehavior="HoldEnd">
                                        <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0" />
                                        <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:6" />
                                    </BooleanAnimationUsingKeyFrames>        
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MaterialDesignOutlinedSplitToggleButton" TargetType="{x:Type extender:SplitToggleButton}" BasedOn="{StaticResource MaterialDesignOutlinedRectangularToggleButton}">
        <Setter Property="TextElement.FontWeight" Value="Medium"/>
        <Setter Property="TextElement.FontSize" Value="14"/>
        <Setter Property="Padding" Value="13, 2"/>
        <Setter Property="TrailingIconKind" Value="ChevronDown" />
        <Setter Property="TrailingIconMargin" Value="-8,0,6,0" />
        <Setter Property="TrailingIconSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type extender:SplitToggleButton}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                x:Name="border" 
                                CornerRadius="{Binding Path=(wpf:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <wpf:Ripple x:Name="contentControl"
                                        Focusable="False"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                                <wpf:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource InnerBorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth" />
                                        <Binding ElementName="border" Path="ActualHeight" />
                                        <Binding ElementName="border" Path="CornerRadius" />
                                        <Binding ElementName="border" Path="BorderThickness" />
                                    </MultiBinding>
                                </wpf:Ripple.Clip>
                                <wpf:Ripple.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                            
                                        <ContentControl x:Name="MainPart"
                                                        Content="{TemplateBinding Content}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                        Focusable="False" IsTabStop="False"
                                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Margin="{TemplateBinding Padding}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        
                                        <Border Grid.Column="2" Margin="0" Padding="2,0" 
                                                Visibility="{Binding TrailingIconKind, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NotNullToVisibilityConverter}}">
                                            <wpf:PackIcon Kind="{TemplateBinding TrailingIconKind}" 
                                                          Width="{TemplateBinding TrailingIconSize}"
                                                          Height="{TemplateBinding TrailingIconSize}"
                                                          Margin="{TemplateBinding TrailingIconMargin}"
                                                          VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Border>

                                        <wpf:PopupEx Grid.Column="0" x:Name="PART_Popup" 
                                                     TextElement.Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                                     TextElement.FontSize="{Binding (TextElement.FontSize), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                                     TextElement.FontWeight="{Binding (TextElement.FontWeight), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                                     StaysOpen="False"
                                                     HorizontalOffset="10"
                                                     VerticalOffset="5"
                                                     PlacementTarget="{Binding ElementName=border}"
                                                     Placement="Bottom"
                                                     PopupAnimation="Fade"
                                                     AllowsTransparency="True">
                                            <wpf:Card Content="{TemplateBinding PopupContent}" 
                                                      ContentTemplate="{TemplateBinding PopupContentTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding PopupContentTemplateSelector}"
                                                      Margin="4"
                                                      wpf:ShadowAssist.ShadowDepth="Depth2"
                                                      RenderOptions.ClearTypeHint="Enabled" />
                                        </wpf:PopupEx>
                                    </Grid>
                                </wpf:Ripple.Content>
                            </wpf:Ripple>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" 
                                    Value="{Binding Foreground,
                                                    RelativeSource={RelativeSource Mode=TemplatedParent},
                                                    Converter={StaticResource BrushOpacityConverter},
                                                    ConverterParameter=0.16}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" 
                                    Value="{Binding Foreground,
                                                    RelativeSource={RelativeSource Mode=TemplatedParent},
                                                    Converter={StaticResource BrushOpacityConverter},
                                                    ConverterParameter=0.33}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" 
                                    Value="{Binding Foreground,
                                                    RelativeSource={RelativeSource Mode=TemplatedParent},
                                                    Converter={StaticResource BrushOpacityConverter},
                                                    ConverterParameter=0.24}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="wpf:ToggleButtonAssist.HasOnContent" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="contentControl" Property="Content" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ToggleButtonAssist.OnContent)}" />
                            <Setter TargetName="contentControl" Property="ContentTemplate" 
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ToggleButtonAssist.OnContentTemplate)}" />
                        </MultiTrigger>
                        <Trigger Property="IsOpen" SourceName="PART_Popup" Value="True">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{Binding Foreground,
                                                    RelativeSource={RelativeSource Mode=TemplatedParent},
                                                    Converter={StaticResource BrushOpacityConverter},
                                                    ConverterParameter=0.16}" />
                            <Setter TargetName="MainPart" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="MainPart" Property="Opacity" Value="0.7"/>
                            <Setter Property="wpf:RippleAssist.IsDisabled" Value="True" />
                            <Setter TargetName="PART_Popup" Property="wpf:RippleAssist.IsDisabled" Value="{Binding (wpf:RippleAssist.IsDisabled), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <EventTrigger SourceName="PART_Popup" RoutedEvent="Unloaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="MainPart" 
                                                                    Storyboard.TargetProperty="IsEnabled" Duration="0:0:6" FillBehavior="HoldEnd">
                                        <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0" />
                                        <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:6" />
                                    </BooleanAnimationUsingKeyFrames>        
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
