<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:extender="clr-namespace:MaterialDesignThemes.Wpf.AddOns">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf.AddOns;component/Themes/MaterialDesignTheme.ToggleButton.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <wpf:BrushRoundConverter x:Key="BrushRoundConverter" />

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MaterialDesignVerticalSeparator" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignSelection}"/>
        <Setter Property="MinWidth" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Width="1" Fill="{TemplateBinding Background}"
                               HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MaterialDesignVerticalDarkSeparator" TargetType="{x:Type Separator}" BasedOn="{StaticResource MaterialDesignVerticalSeparator}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignDarkSeparatorBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDarkSeparatorBackground}"/>
    </Style>
    
    <Style x:Key="MaterialDesignVerticalLightSeparator" TargetType="{x:Type Separator}" BasedOn="{StaticResource MaterialDesignVerticalSeparator}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignLightSeparatorBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignLightSeparatorBackground}"/>
    </Style>

    <Style x:Key="MaterialDesignRaisedSplitButton" TargetType="{x:Type extender:SplitButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
        <Setter Property="wpf:RippleAssist.Feedback" Value="White" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="TextElement.FontWeight" Value="Medium"/>
        <Setter Property="TextElement.FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="13 4 7 4"/>
        <Setter Property="Height" Value="32" />
        <Setter Property="ToggleStyle" Value="{StaticResource MaterialDesignRaisedRectangularToggleButton}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type extender:SplitButton}">
                    <Grid>
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(wpf:ShadowAssist.CacheMode)}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" CornerRadius="2"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            BorderBrush="{TemplateBinding BorderBrush}"                                    
                                            x:Name="border"
                                            Effect="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                             Path=(wpf:ShadowAssist.ShadowDepth), 
                                                             Converter={x:Static wpf:ShadowConverter.Instance}}" />
                            </Grid>
                        </AdornerDecorator>
                        <wpf:Ripple HorizontalContentAlignment="Stretch">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentControl  x:Name="MainPart" Grid.ColumnSpan="2" 
                                                     Content="{TemplateBinding Content}" 
                                                     ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                     Margin="{TemplateBinding Padding}"
                                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Focusable="False"
                                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                <Separator Grid.Column="2" 
                                           Style="{StaticResource MaterialDesignVerticalLightSeparator}" 
                                           Margin="0,0,-8,0" Padding="0" HorizontalAlignment="Stretch" />

                                <ToggleButton x:Name="PART_ToggleButton" Grid.Column="3"
                                              Background="Transparent" BorderBrush="Transparent"  
                                              Style="{TemplateBinding ToggleStyle}" 
                                              Width="28" Margin="0" Padding="6,0,6,0">
                                    <wpf:PackIcon Kind="ChevronDown" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </ToggleButton>

                                <wpf:PopupEx Grid.Column="0" x:Name="PART_Popup" 
                                             TextElement.Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             TextElement.FontSize="{Binding (TextElement.FontSize), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             TextElement.FontWeight="{Binding (TextElement.FontWeight), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             IsOpen="{Binding Path=IsChecked, ElementName=PART_ToggleButton, Mode=TwoWay}"
                                             StaysOpen="False"
                                             HorizontalOffset="10"
                                             VerticalOffset="5"
                                             PlacementTarget="{Binding ElementName=border}"
                                             Placement="Bottom"
                                             PopupAnimation="Fade"
                                             AllowsTransparency="True">
                                    <wpf:Card Content="{TemplateBinding PopupContent}" 
                                              ContentTemplate="{TemplateBinding PopupContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding PopupContentTemplateSelector}"
                                              Margin="4"
                                              wpf:ShadowAssist.ShadowDepth="Depth2"
                                              RenderOptions.ClearTypeHint="Enabled" />
                                </wpf:PopupEx>
                            </Grid>
                        </wpf:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_ToggleButton" Value="True">
                            <Setter Property="wpf:RippleAssist.IsDisabled" Value="True" />
                            <Setter Property="wpf:RippleAssist.IsDisabled" TargetName="PART_ToggleButton" Value="False" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsOpen" SourceName="PART_Popup" Value="True">
                            <Setter TargetName="border" Property="wpf:ShadowAssist.Darken" Value="True" />
                            <Setter TargetName="MainPart" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="MainPart" Property="Opacity" Value="0.5"/>
                            <Setter Property="wpf:RippleAssist.IsDisabled" Value="True" />
                            <Setter TargetName="PART_Popup" Property="wpf:RippleAssist.IsDisabled" Value="{Binding (wpf:RippleAssist.IsDisabled), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                        <EventTrigger SourceName="PART_Popup" RoutedEvent="Unloaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="MainPart" 
                                                                    Storyboard.TargetProperty="IsEnabled" Duration="0:0:6" FillBehavior="HoldEnd">
                                        <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0" />
                                        <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:6" />
                                    </BooleanAnimationUsingKeyFrames>        
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialDesignRaisedLightSplitButton" TargetType="{x:Type extender:SplitButton}" BasedOn="{StaticResource MaterialDesignRaisedSplitButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
        <Setter Property="ToggleStyle" Value="{DynamicResource MaterialDesignRaisedRectangularLightToggleButton}"/>
    </Style>

    <Style x:Key="MaterialDesignRaisedDarkSplitButton" TargetType="{x:Type extender:SplitButton}" BasedOn="{StaticResource MaterialDesignRaisedSplitButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
        <Setter Property="ToggleStyle" Value="{DynamicResource MaterialDesignRaisedRectangularDarkToggleButton}"/>
    </Style>

    <Style x:Key="MaterialDesignRaisedAccentSplitButton" TargetType="{x:Type extender:SplitButton}" BasedOn="{StaticResource MaterialDesignRaisedSplitButton}">
        <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryAccentBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentForegroundBrush}"/>
        <Setter Property="ToggleStyle" Value="{DynamicResource MaterialDesignRaisedRectangularAccentToggleButton}"/>
    </Style>
    
    <Style x:Key="MaterialDesignFlatToggleButtonForSplitButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignFlatRectangularToggleButton}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignTextAreaBorder}" />
        <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignTextAreaBorder}" />
    </Style>

    <Style x:Key="MaterialDesignFlatSplitButton" TargetType="{x:Type extender:SplitButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="TextElement.FontWeight" Value="Medium"/>
        <Setter Property="TextElement.FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="13 4 7 4"/>
        <Setter Property="Height" Value="32" />
        <Setter Property="ToggleStyle" Value="{StaticResource MaterialDesignFlatToggleButtonForSplitButton}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type extender:SplitButton}">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="2"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <wpf:Ripple HorizontalContentAlignment="Stretch">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ContentControl x:Name="MainPart" Grid.ColumnSpan="2" 
                                                Content="{TemplateBinding Content}" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Focusable="False"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                <Separator Grid.Column="2" Style="{StaticResource MaterialDesignVerticalLightSeparator}" 
                                           Margin="0,0,-8,0" Padding="0" HorizontalAlignment="Stretch" />

                                <ToggleButton x:Name="PART_ToggleButton" Grid.Column="3"
                                              Style="{TemplateBinding ToggleStyle}" 
                                              Width="28" Margin="0" Padding="6,0,6,0">
                                    <wpf:PackIcon Kind="ChevronDown" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </ToggleButton>

                                <wpf:PopupEx Grid.Column="0" x:Name="PART_Popup" 
                                             TextElement.Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             TextElement.FontSize="{Binding (TextElement.FontSize), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             TextElement.FontWeight="{Binding (TextElement.FontWeight), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             IsOpen="{Binding Path=IsChecked, ElementName=PART_ToggleButton, Mode=TwoWay}"
                                             StaysOpen="False"
                                             HorizontalOffset="10"
                                             VerticalOffset="5"
                                             PlacementTarget="{Binding ElementName=border}"
                                             Placement="Bottom"
                                             PopupAnimation="Fade"
                                             AllowsTransparency="True">
                                    <wpf:Card Content="{TemplateBinding PopupContent}" 
                                              ContentTemplate="{TemplateBinding PopupContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding PopupContentTemplateSelector}"
                                              Margin="4"
                                              wpf:ShadowAssist.ShadowDepth="Depth2"
                                              RenderOptions.ClearTypeHint="Enabled" />
                                </wpf:PopupEx>
                            </Grid>
                        </wpf:Ripple>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_ToggleButton" Value="True">
                            <Setter Property="wpf:RippleAssist.IsDisabled" Value="True" />
                            <Setter Property="wpf:RippleAssist.IsDisabled" TargetName="PART_ToggleButton" Value="False" />
                        </Trigger>
                        <Trigger Property="IsOpen" SourceName="PART_Popup" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MaterialDesignFlatButtonClick}" />
                            <Setter TargetName="MainPart" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="MainPart" Property="Opacity" Value="0.7"/>
                            <Setter Property="wpf:RippleAssist.IsDisabled" Value="True" />
                            <Setter TargetName="PART_Popup" Property="wpf:RippleAssist.IsDisabled" Value="{Binding (wpf:RippleAssist.IsDisabled), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                        <EventTrigger SourceName="PART_Popup" RoutedEvent="Unloaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="MainPart" 
                                                                    Storyboard.TargetProperty="IsEnabled" Duration="0:0:6" FillBehavior="HoldEnd">
                                        <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0" />
                                        <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:6" />
                                    </BooleanAnimationUsingKeyFrames>        
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialDesignFlatAccentSplitButton" TargetType="{x:Type extender:SplitButton}" BasedOn="{StaticResource MaterialDesignFlatSplitButton}">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentBrush}"/>
        <Setter Property="ToggleStyle" Value="{DynamicResource MaterialDesignFlatAccentToggleButton}"/>
    </Style>
    
    <Style x:Key="MaterialDesignOutlinedSplitButton" TargetType="{x:Type extender:SplitButton}" BasedOn="{StaticResource MaterialDesignFlatSplitButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="wpf:ButtonAssist.CornerRadius" Value="2" />
        <Setter Property="ToggleStyle" Value="{StaticResource MaterialDesignFlatRectangularToggleButton}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type extender:SplitButton}">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="{Binding Path=(wpf:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <wpf:Ripple HorizontalContentAlignment="Stretch">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ContentControl x:Name="MainPart" Grid.ColumnSpan="2" 
                                                Content="{TemplateBinding Content}" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Focusable="False"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                <Separator Grid.Column="2" Style="{StaticResource MaterialDesignVerticalDarkSeparator}" 
                                           Margin="0,2,-8,2" Padding="0" HorizontalAlignment="Stretch" />

                                <ToggleButton x:Name="PART_ToggleButton" Grid.Column="3"
                                              Style="{TemplateBinding ToggleStyle}" 
                                              Width="28" Margin="0" Padding="6,0,6,0">
                                    <wpf:PackIcon Kind="ChevronDown" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </ToggleButton>

                                <wpf:PopupEx Grid.Column="0" x:Name="PART_Popup" 
                                             TextElement.Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             TextElement.FontSize="{Binding (TextElement.FontSize), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             TextElement.FontWeight="{Binding (TextElement.FontWeight), RelativeSource={RelativeSource FindAncestor, AncestorType=FrameworkElement, AncestorLevel=7}}"
                                             IsOpen="{Binding Path=IsChecked, ElementName=PART_ToggleButton, Mode=TwoWay}"
                                             StaysOpen="False"
                                             HorizontalOffset="10"
                                             VerticalOffset="5"
                                             PlacementTarget="{Binding ElementName=border}"
                                             Placement="Bottom"
                                             PopupAnimation="Fade"
                                             AllowsTransparency="True">
                                    <wpf:Card Content="{TemplateBinding PopupContent}" 
                                              ContentTemplate="{TemplateBinding PopupContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding PopupContentTemplateSelector}"
                                              Margin="4"
                                              wpf:ShadowAssist.ShadowDepth="Depth2"
                                              RenderOptions.ClearTypeHint="Enabled" />
                                </wpf:PopupEx>
                            </Grid>
                            <wpf:Ripple.Clip>
                                <!-- ReSharper disable once Xaml.StaticResourceNotResolved -->
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </wpf:Ripple.Clip>
                        </wpf:Ripple>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{Binding Foreground,
                                                    RelativeSource={RelativeSource Mode=TemplatedParent},
                                                    Converter={StaticResource BrushOpacityConverter},
                                                    ConverterParameter=0.16}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_ToggleButton" Value="True">
                            <Setter Property="wpf:RippleAssist.IsDisabled" Value="True" />
                            <Setter Property="wpf:RippleAssist.IsDisabled" TargetName="PART_ToggleButton" Value="False" />
                        </Trigger>
                        <Trigger Property="IsOpen" SourceName="PART_Popup" Value="True">
                            <Setter Property="Background" TargetName="border" 
                                    Value="{Binding Foreground,
                                                    RelativeSource={RelativeSource Mode=TemplatedParent},
                                                    Converter={StaticResource BrushOpacityConverter},
                                                    ConverterParameter=0.16}" />
                            <Setter TargetName="MainPart" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="MainPart" Property="Opacity" Value="0.7"/>
                            <Setter Property="wpf:RippleAssist.IsDisabled" Value="True" />
                            <Setter TargetName="PART_Popup" Property="wpf:RippleAssist.IsDisabled" Value="{Binding (wpf:RippleAssist.IsDisabled), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38"/>
                        </Trigger>
                        <EventTrigger SourceName="PART_Popup" RoutedEvent="Unloaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="MainPart" 
                                                                    Storyboard.TargetProperty="IsEnabled" Duration="0:0:6" FillBehavior="HoldEnd">
                                        <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0" />
                                        <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:6" />
                                    </BooleanAnimationUsingKeyFrames>        
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
